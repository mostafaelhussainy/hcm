@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin flex($justify: center, $align: center, $direction: row, $column-gap: unset, $row-gap: unset) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  flex-direction: $direction;
  column-gap: $column-gap;
  row-gap: $row-gap;
}

@mixin grid($columns-number, $rows-number, $column-gap: unset, $row-gap: unset) {
  display: grid;
  grid-template-columns: $columns-number;
  grid-template-rows: $rows-number;
  column-gap: $column-gap;
  row-gap: $row-gap;
}

@mixin abs($top: unset, $bottom: unset, $left: unset, $right: unset) {
  position: absolute;
  top: $top;
  bottom: $bottom;
  left: $left;
  right: $right;
}

@mixin abs-center {
  position: absolute;
  transform: translate(-50%, -50%);
  top: 50%;
  left: 50%;
}

@mixin image-fit($width: 100%, $height: 100%, $object-fit: contain, $object-position: center) {
  width: $width;
  height: $height;
  object-fit: $object-fit;
  object-position: $object-position;
}

@mixin line-clamp($line-number: 1, $max-width: unset) {
  max-width: $max-width;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: initial;
  display: -webkit-box;
  -webkit-line-clamp: $line-number;
  line-clamp: $line-number;
  -webkit-box-orient: vertical;
}

@mixin placeholder {
  &.placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::-webkit-input-placeholder {
    @content;
  }
}

@mixin pseudo($overlay: false) {
  @if $overlay == true {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  } @else {
    content: '';
    display: block;
    position: absolute;
  }
}

/*------  R E S P O N S I V E    L A Y O U T ------*/
/* 
  Must give the parent `display: flex; flex-wrap: wrap;`
  this mixin will make cards width responsive and dynamic
  !Important: give cards max-width if needed
*/
@mixin card-width($cards-num: 2, $row-gap: 0) {
  @if $row-gap == 0 {
    flex-basis: calc(100% / #{$cards-num});
  } @else {
    flex-basis: calc((100% - (#{$cards-num - 1}) * #{$row-gap}) / #{$cards-num});
  }
}

/*
  Another way but by doing this to the parent using `grid`
  !Important: give cards max-width if needed
*/
@mixin grid-layout($columns: 2, $gap: unset) {
  display: grid;
  justify-content: space-between;
  grid-template-columns: repeat(#{$columns}, 1fr);
  column-gap: $gap;
}

@mixin rt($parent) {
  @at-root #{$parent} & {
    @content;
  }
}
